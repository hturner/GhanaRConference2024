---
title: Write ups with Quarto
subtitle: Ghana R Conference 2024
author: Heather Turner
date: 2024-06-06
date-format: long
format: 
  warwickpres-revealjs: 
    title-slide-attributes: 
      data-background-image: warwick-logo-white.png
      data-background-size: 15%
      data-background-position: 100% 0%
#format:
#  warwickpres-revealjs: default
---

## What is Quarto?

> ### Quarto^®^ is an open-source scientific and technical publishing system built on [Pandoc](https://pandoc.org/)

. . .

> You can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books and more.

## Sounds like R Markdown!

![](https://raw.githubusercontent.com/allisonhorst/stats-illustrations/master/rstats-artwork/rmarkdown_wizards.png)

## R Markdown Mechanics

![](images/rmd-knitr.png)

## So why Quarto?

> Quarto is the next generation of R Markdown. For **everyone**.

. . .

> Quarto is a command line interface (CLI) that renders plain text formats (`.qmd`, `.rmd`, `.md`) OR mixed formats (`.ipynb`/Jupyter notebook) into static PDF/Word/HTML reports, books, websites, presentations and more

## Quarto can be used like R Markdown

![](images/qmd-knitr.png)

## But is more general

-   Code can be R, Python, Julia, Observable JS

-   `knitr` and `jupyter` engines

-   Works in RStudio, Jupyter Notebooks, VS Code

. . .

In this talk, we'll focus on R and RStudio

## One install, "Batteries included"

R Markdown grew into a large ecosystem of packages, with **varying syntax**.

. . .

Quarto comes **"batteries included"** straight out of the box

-   HTML reports and websites
-   PDF reports
-   MS Office (Word, Powerpoint)
-   Presentations (Powerpoint, Beamer, `revealjs`)
-   Books

. . .

-   Any language, *exact* same approach and syntax

::: notes
all in one versus separate packages
:::

## Do I need to switch?

R Markdown will continue to be maintained.

Even if you only use R, there are reasons to switch

-   Better accessibility and richer features built in
-   Development now focused on Quarto for new features
-   Potential to collaborate with non R-users

See [FAQs](https://quarto.org/docs/faq/rmarkdown.html), including a conversion from RMarkdown formats to Quarto equivalents.

## Quarto Documents

> A Quarto document i.e. a `.qmd` is a plain text file, like a `.rmd`, that can be rendered to many different formats

````         
---
title: "Introduction to Quarto"
format: html
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```
````

## Anatomy of a Quarto document

-   Metadata (YAML)

``` yaml
---
title: "Introduction to Quarto"
format: html
---
```

## Anatomy of a Quarto document

-   Text

``` markdown
## Section Header

This is a sentence with some **bold text** and some *italic text* 
This is an [image](image.png).
```

## Anatomy of a Quarto document

-   Code

```{r}
#| echo: fenced
1 + 1
```

::: notes
yaml within a code block
:::

## Rendering a Quarto document

1.  Install Quarto: <https://quarto.org/docs/get-started/>

2.  Open a new, empty Quarto document in RStudio

![](images/clipboard-3061132192.png)

##  {#quarto-document-dialog .center-h data-menu-title="Quarto document dialog"}

![](images/clipboard-1574562795.png){style="\"max-width=100%"}

##  {#new-quarto-document-visual .center-h data-menu-title="New Quarto document - visual"}

![](images/clipboard-1752499319.png){style="\"max-width=100%"}

##  {#new-quarto-document-source .center-h data-menu-title="New Quarto document - source"}

![](images/clipboard-2673774451.png){style="\"max-width=100%"}

##  {#demo-html-output .center-h data-menu-title="Demo HTML output"}

![](images/clipboard-3563194863.png)

## Metadata: YAML

"Yet Another Markup Language" or "YAML Ain't Markup Language"

``` yaml
---
key: value
---
```

The [YAML](https://yaml.org/) metadata or header is:

> processed in many stages of the rendering process and can influence the final document in many different ways. It is placed at the very beginning of the document and is read by each of Pandoc, Quarto and `knitr`. Along the way, the information that it contains can affect the code, content, and the rendering process.

## Output Options

``` yaml
---
format: something
---
```

. . .

``` yaml
---
format: html
---
```

``` yaml
---
format: docx
---
```

``` yaml
---
format: revealjs
---
```

## Options on options

Then add option arguments!

``` yaml
---
format: 
  html:
    toc: true
    code-fold: true
---
```

. . .

Sub-options should be below the main format output and spacing matters!

``` yaml
---
format: 
  html:
    option1: text
    option2: logical
---
```

## YAML is sensitive

``` yaml
---
format:html # invalid, no space between
---

---
format: # invalid, read as missing
html
---

---
format: 
  html: # valid but needs next object
---
```

## Text: Markdown

> Markdown is a plain text format that is designed to be easy to write, and, even more importantly, easy to read

. . .

> Quarto is based on Pandoc and uses its variation of markdown as its underlying document syntax. Pandoc markdown is an extended and slightly revised version of John Gruber's [Markdown](https://daringfireball.net/projects/markdown/) syntax.

## Text Formatting

+-------------------------------+-------------------------------+
| Markdown Syntax               | Output                        |
+===============================+===============================+
| ```                           | *italics* and **bold**        |
| *italics* and **bold**        |                               |
| ```                           |                               |
+-------------------------------+-------------------------------+
| ```                           | superscript^2^ / subscript~2~ |
| superscript^2^ / subscript~2~ |                               |
| ```                           |                               |
+-------------------------------+-------------------------------+
| ```                           | ~~strikethrough~~             |
| ~~strikethrough~~             |                               |
| ```                           |                               |
+-------------------------------+-------------------------------+
| ```                           | `verbatim code`               |
| `verbatim code`               |                               |
| ```                           |                               |
+-------------------------------+-------------------------------+

## Headings

+-----------------+-----------------+
| Markdown Syntax | Output          |
+=================+=================+
| ```             | # Header 1      |
| # Header 1      |                 |
| ```             |                 |
+-----------------+-----------------+
| ```             | ## Header 2     |
| ## Header 2     |                 |
| ```             |                 |
+-----------------+-----------------+
| ```             | ### Header 3    |
| ### Header 3    |                 |
| ```             |                 |
+-----------------+-----------------+
| ```             | #### Header 4   |
| #### Header 4   |                 |
| ```             |                 |
+-----------------+-----------------+
| ```             | ##### Header 5  |
| ##### Header 5  |                 |
| ```             |                 |
+-----------------+-----------------+
| ```             | ###### Header 6 |
| ###### Header 6 |                 |
| ```             |                 |
+-----------------+-----------------+

: {tbl-colwidths="\[50, 50\]"}

## Links

-   There are several types of "links" or hyperlinks.

::: panel-tabset
## Markdown

``` markdown
You can embed [named hyperlinks](https://quarto.org/),
direct urls like <https://quarto.org/>, and links to 
[other places](#quarto-anatomy) in 
the document. The syntax is similar for embedding an
inline image: ![Penguins](images/lter_penguins.png).
```

## Output

You can embed [named hyperlinks](https://quarto.org/), direct urls like <https://quarto.org/>, and links to [other places](#quarto-anatomy) in the document. The syntax is similar for embedding an inline image:\
![Penguins](images/lter_penguins.png){style="width:250px;"}
:::

## Code chunk

```{{r}}
#| label: car-stuff
#| echo: false
mtcars %>% 
  distinct(cyl)
```

. . .

-   Has 3x backticks on each end ```` ``` ````\
-   Indicate engine (`r`) between curly braces `{r}`\
-   Place options underneath, behind the `#|` (hashpipe):
    -   `#| option1: value`

::: notes
show how to navigate through code chunks in RStudio (click arrows in footer of code window) demo with and without echo
:::

## Code

::: panel-tabset
## Code

```{{r}}
#| label: fig-airquality
#| out-width: "80%"
#| fig-cap: Temperature and ozone level.
#| fig-alt: A scatterplot of ozone level against temparature, with a local regression fit that has a confidence band. The ozone level is fairly constant at around 15ppb from a temperature of 55°F to 75°F, then increases linearly to around 80ppb at a temperature of 90°F, where the ozone level starts to asymptote. The points are generally close to this curve apart from 7 outliers with higher than expected ozone between 75°F and 95°F.
#| warning: false

library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")
```

## Output

```{r}
#| label: fig-airquality
#| out-width: 80%
#| fig-cap: Temperature and ozone level.
#| fig-alt: A scatterplot of ozone level against temparature, with a local regression fit that has a confidence band. The ozone level is fairly constant at around 15ppb from a temperature of 55°F to 75°F, then increases linearly to around 80ppb at a temperature of 90°F, where the ozone level starts to asymptote. The points are generally close to this curve apart from 7 outliers with higher than expected ozone between 75°F and 95°F.
#| warning: false

library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")
```
:::

## Quarto presentations

``` yaml
---
format: revealjs
---
```

``` yaml
---
format: 
  revealjs:
    slide-number: true
---
```

## More on Quarto presentations

-   [Official guide](https://quarto.org/docs/presentations/)

-   [Slidecraft 101](https://emilhvitfeldt.com/blog#category=slidecraft%20101) by Emil Hvitfeldt

    -   Colours and Fonts
    -   Code and Output
    -   Theme variants
    -   Advanced slide themes
    -   7 tips and tricks

# Publishing {.inverse}

## Web publishing venues

| Destination                          | Description                                                                     |
|--------------------------------------|---------------------------------------------------------------------------------|
| [Quarto Pub](quarto-pub.qmd)         | Publishing service for Quarto documents, websites, and books.                   |
| [GitHub Pages](github-pages.qmd)     | Publish content based on source code managed within a GitHub repository.        |
| [Posit Connect](rstudio-connect.qmd) | Publishing platform for secure sharing of data products within an organization. |
| [Netlify](netlify.qmd)               | Professional web publishing platform.                                           |
| [Confluence](confluence.qmd)         | Publishing platform for supporting team collaboration.                          |

... and more.

## Quarto Pub

Visit <https://quartopub.com/> and set up a free account.

::: {style="text-align: center"}
![](images/quartopub.png)
:::

## `quarto publish`

\
\

At the Terminal, run:

\

::: {style="font-size: 2em"}
``` bash
quarto publish <document>
```
:::

See e.g. <https://jjallaire.quarto.pub/>

## Netlify

Visit <https://app.netlify.com/> and set up a free account.

At the Terminal, run:

::: {style="font-size: 2em"}
``` bash
quarto publish netlify <document>
```
:::

## Resources

-   <https://quarto.org>: The official documentation

-   [Awesome Quarto](https://github.com/mcanouil/awesome-quarto): A curated list of Quarto talks, tools, examples & articles

-   [Beautiful Reports and Persentations with Quarto](https://thomasmock.quarto.pub/reports-presentations/#/title-slide)

-   [Getting Started with Quarto workshop website](https://rstudio-conf-2022.github.io/get-started-quarto/)

-   [Quarto for R and RStudio workshop](https://posit-conf-2023.github.io/quarto-r/)

# End matter {.inverse}

## Resources

Some slides in this talk are remixed material from Tom Mock's 'Getting Started with Quarto' workshop at rstudio::conf(2022).

-   [Workshop website](https://rstudio-conf-2022.github.io/get-started-quarto/)
-   [Workshop repo](https://github.com/rstudio-conf-2022/get-started-quarto)

Shared under Creative Commons 4.0 License.

## License

Licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License ([CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/){target="_blank"}).
